@model IEnumerable<TECHNOVA.ViewModels.CartItem>
@{
    ViewData["Title"] = "Cart";
}

<!-- Breadcrumb Start -->
<div class="breadcrumb-wrap">
    <div class="container-fluid">
        <ul class="breadcrumb">
            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
            <li class="breadcrumb-item"><a asp-controller="Item" asp-action="Index">Products</a></li>
            <li class="breadcrumb-item active">Cart</li>
        </ul>
    </div>
</div>
<!-- Breadcrumb End -->

<!-- Cart Start -->
<div class="cart-page">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-8">
                <div class="cart-page-inner">
                    <div class="table-responsive">
                        <table class="table table-bordered">
                            <thead class="thead-dark">
                                <tr>
                                    <th>Product</th>
                                    <th>Price</th>
                                    <th>Quantity</th>
                                    <th>Total</th>
                                    <th>Remove</th>
                                </tr>
                            </thead>
                            <tbody class="align-middle">
                                @foreach(var item in Model)
                                {
                                    <tr>
                                        <td>
                                            <div class="img">
                                                <a asp-action="Detail" asp-controller="Item" asp-route-id="@item.productId"><img src="@item.image" alt="Image"></a>
                                                <a asp-action="Detail" asp-controller="Item" asp-route-id="@item.productId"><p>@item.productName</p></a>
                                            </div>
                                        </td>
                                        <td>$@item.price</td>
                                        <td>
                                            <div class="qty">
                                                <button class="btn-minus"><i class="fa fa-minus"></i></button>
                                                <input type="text" class="quantity-input" value="@item.quantity" data-product-id="@item.productId">
                                                <button class="btn-plus"><i class="fa fa-plus"></i></button>
                                            </div>
                                        </td>
                                        <td>$@item.total</td>
                                        <td>
                                            <a asp-action="RemoveCart" asp-controller="Cart" asp-route-productId="@item.productId" class="btn btn-danger">
                                                <i class="fa fa-trash"></i>
                                            </a>
                                        </td>

                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="cart-page-inner">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="coupon">
                                <input type="text" placeholder="Coupon Code">
                                <button>Apply Code</button>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="cart-summary">
                                <div class="cart-content">
                                    <h1>Cart Summary</h1>
                                    <p>Sub Total<span>$@Model.Sum(p =>p.total)</span></p>
                                    <p>Shipping Cost<span>$1</span></p>
                                    <h2>Grand Total<span>$@(Model.Sum(p => p.total) + 1)</span></h2>
                                </div>
                                <div class="cart-btn d-flex justify-content-between">
                                    <a asp-controller="Item" asp-action="Index" class="btn btn-outline-secondary w-45">Update Cart</a>
                                    <a asp-controller="Cart" asp-action="Checkout" class="btn btn-orange w-45">Checkout</a>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .cart-btn {
        gap: 10px;
    }

    .w-45 {
        width: 48%; /* để có khoảng cách nhỏ giữa 2 nút */
    }

    .btn-orange {
        background-color: coral;
        color: white;
        font-weight: bold;
        border: none;
        transition: background-color 0.2s ease;
    }

        .btn-orange:hover {
            background-color: darkorange;
        }

</style>
<!-- Cart End -->
<script>
    function recalculateSummary() {
        let subtotal = 0;
        document.querySelectorAll('.cart-page tbody tr').forEach(row => {
            const price = parseFloat(row.querySelector('td:nth-child(2)').innerText.replace('$', '').trim());
            const quantity = parseInt(row.querySelector('input[type="text"]').value) || 1;
            subtotal += price * quantity;
        });

        const shippingCost = 1; // cố định theo bạn đã ghi
        const grandTotal = subtotal + shippingCost;

        document.querySelector('.cart-content p span').innerText = `$${subtotal.toFixed(2)}`;
        document.querySelector('.cart-content h2 span').innerText = `$${grandTotal.toFixed(2)}`;
    }

    document.querySelectorAll('.cart-page tbody tr').forEach(row => {
        const btnMinus = row.querySelector('.btn-minus');
        const btnPlus = row.querySelector('.btn-plus');
        const input = row.querySelector('input[type="text"]');
        const priceText = row.querySelector('td:nth-child(2)').innerText.replace('$', '').trim();
        const totalCell = row.querySelector('td:nth-child(4)');
        const price = parseFloat(priceText);

        function updateTotal() {
            let quantity = parseInt(input.value);
            if (isNaN(quantity) || quantity < 1) quantity = 1;
            input.value = quantity;
            const total = (price * quantity).toFixed(2);
            totalCell.innerText = `$${total}`;
            recalculateSummary();
        }

        btnMinus.addEventListener('click', () => {
            setTimeout(updateTotal, 0);
        });

        btnPlus.addEventListener('click', () => {
            setTimeout(updateTotal, 0);
        });

        input.addEventListener('input', updateTotal);

        updateTotal();
    });

    // Xử lý khi thay đổi số lượng
    document.querySelectorAll('.quantity-input').forEach(input => {
        input.addEventListener('change', async function () {
            const productId = parseInt(this.getAttribute('data-product-id'));
            const quantity = parseInt(this.value);

            if (isNaN(quantity) || quantity < 1) {
                alert("Invalid quantity");
                return;
            }

            try {
                const response = await fetch('/Cart/UpdateQuantity', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ productId, quantity })
                });

                const data = await response.json();

                if (data.success) {
                    alert("Quantity updated successfully");
                    location.reload();
                } else {
                    alert("Error: " + data.message);
                }
            } catch (err) {
                console.error("Fetch error", err);
            }
        });
    });

</script>



